buildscript {
  ext {
    springBootVersion = "2.0.0.M3"
  }
  repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
  }
}

plugins {
  id "idea"
  id "eclipse"
}

allprojects {

  apply plugin: "java"

  version = "0.0.1"

  sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

  repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
  }
}

subprojects { sp ->

  if (!sp.name.startsWith("boot")) return

  apply plugin: "org.springframework.boot"
  apply plugin: "io.spring.dependency-management"

  dependencies {
    compile("org.projectlombok:lombok")
    compile("org.springframework.boot:spring-boot-starter")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("io.projectreactor:reactor-test")
  }

  [test, build, bootRun].each { Task t ->
    t.shouldRunAfter clean, assemble, ":docker:composeUp"
    t.dependsOn ":docker:composeUp"
    t.finalizedBy ":docker:composeDown"
  }

  sp.bootJar {
    launchScript {
      included = true
    }
  }
}

task wrapper(type: Wrapper) {
  distributionType = 'BIN'
  gradleVersion = "4.10.2"
}
