version: "2.1"
services:
  cassandra:
    #image: cassandra:3.11.0
    image: healthcheck/cassandra:latest
#    environment:
#      CASSANDRA_LISTEN_ADDRESS: # controlling which IP address to listen for incoming connections on. The default value is auto, which will set the listen_address option in cassandra.yaml to the IP address of the container as it starts. This default should work in most use cases
#      CASSANDRA_BROADCAST_ADDRESS: # controlling which IP address to advertise to other nodes. The default value is the value of CASSANDRA_LISTEN_ADDRESS. It will set the broadcast_address and broadcast_rpc_address options in cassandra.yaml
#      CASSANDRA_RPC_ADDRESS: # controlling which address to bind the thrift rpc server to. If you do not specify an address, the wildcard address (0.0.0.0) will be used. It will set the rpc_address option in cassandra.yaml
#      CASSANDRA_START_RPC: #controlling if the thrift rpc server is started. It will set the start_rpc option in cassandra.yaml
#      CASSANDRA_SEEDS: # comma-separated list of IP addresses used by gossip for bootstrapping new nodes joining a cluster. It will set the seeds value of the seed_provider option in cassandra.yaml. The CASSANDRA_BROADCAST_ADDRESS will be added the the seeds passed in so that the sever will talk to itself as well
#      CASSANDRA_CLUSTER_NAME: # This variable sets the name of the cluster and must be the same for all nodes in the cluster. It will set the cluster_name option of cassandra.yaml
#      CASSANDRA_NUM_TOKENS: # sets number of tokens for this node. It will set the num_tokens option of cassandra.yaml
#      CASSANDRA_DC: # sets the datacenter name of this node. It will set the dc option of cassandra-rackdc.properties
#      CASSANDRA_RACK: # sets the rack name of this node. It will set the rack option of cassandra-rackdc.properties
#      CASSANDRA_ENDPOINT_SNITCH: # sets the snitch implementation this node will use. It will set the endpoint_snitch option of cassandra.yml
    ports:
      # Internode communication (not used if TLS enabled):
      - "7000:7000"
      # JMX (was 8080 pre Cassandra 0.8.xx):
      - "7199:7199"
      # CQL native transport port:
      - "9042:9042"
      ## TLS Internode communication (used if TLS enabled):
      #- "7001:7001"
      ## Thrift client API:
      #- "9160:9160"
    networks: [backing-services]
    volumes:
      - ./CREATE_KEYSPACE_IF_NOT_EXISTS.csql:/CREATE_KEYSPACE_IF_NOT_EXISTS.csql
      - cassandra-data:/var/lib/cassandra
    command: bash -c "cqlsh cassandra -e 'show version'"
volumes:
  cassandra-data: {}
networks:
  backing-services:
    driver: bridge
